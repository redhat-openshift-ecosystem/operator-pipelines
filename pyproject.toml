[tool.black]
target_version = ['py312']

[tool.pdm.build]
package-dir = "./operator-pipeline-images"

[tool.pdm.dev-dependencies]
tox = ["tox>=4.16.0", "tox-pdm>=0.7.2"]

[project]
name = "operatorcert"
version = "1.0.0"
description = "Tools for Red Hat Operator certification pipelines"
authors = [
    { name = "haripate", email = "haripate@redhat.com" },
    { name = "Red Hat, Inc." },
]
requires-python = ">=3.10"
readme = "README.md"
license = { text = "GPLv3" }
dependencies = [
    "python-magic>=0.4.24",
    "pyyaml>=5.4.1",
    "requests>=2.31.0",
    "yq>=2.12.2",
    "giturlparse>=0.10.0",
    "python-dateutil>=2.8.2",
    "humanize>=3.12.0",
    "stomp-py>=8.0.1",
    "requests-kerberos>=0.14.0",
    "PyGithub<2.0,>=1.59.0",
    "GitPython>=3.1.37",
    "semver>=3.0.1",
    "operator-repo @ git+https://github.com/mporrato/operator-repo.git@v0.4.3",
    "urllib3>=2.2.2",
    "openshift-client>=2.0.4",
    "pydantic>=2.10.0",
]

[project.scripts]
add-fbc-fragments-to-index = "operatorcert.entrypoints.add_fbc_fragments_to_index:main"
apply-test-waivers = "operatorcert.entrypoints.apply_test_waivers:main"
build-fragment-images = "operatorcert.entrypoints.build_fragment_images:main"
build-scratch-catalog = "operatorcert.entrypoints.build_scratch_catalog:main"
bundle-dockerfile = "operatorcert.entrypoints.bundle_dockerfile:main"
check-permissions = "operatorcert.entrypoints.check_permissions:main"
create-container-image = "operatorcert.entrypoints.create_container_image:main"
create-github-gist = "operatorcert.entrypoints.create_github_gist:main"
detect-changed-operators = "operatorcert.entrypoints.detect_changed_operators:main"
download-test-results = "operatorcert.entrypoints.download_test_results:main"
fbc-onboarding = "operatorcert.entrypoints.fbc_onboarding:main"
get-cert-project-related-data = "operatorcert.entrypoints.get_cert_project_related_data:main"
get-vendor-related-data = "operatorcert.entrypoints.get_vendor_related_data:main"
github-add-comment = "operatorcert.entrypoints.github_add_comment:main"
github-labels = "operatorcert.entrypoints.github_labels:main"
github-wait-labels = "operatorcert.entrypoints.github_wait_labels:main"
hydra-checklist = "operatorcert.entrypoints.hydra_checklist:main"
index = "operatorcert.entrypoints.index:main"
link-pull-request = "operatorcert.entrypoints.link_pull_request:main"
ocp-version-info = "operatorcert.entrypoints.ocp_version_info:main"
open-pull-request = "operatorcert.entrypoints.github_pr:main"
pipelinerun-summary = "operatorcert.entrypoints.pipelinerun_summary:main"
preflight-result-filter = "operatorcert.entrypoints.preflight_result_filter:main"
publish-pyxis-image = "operatorcert.entrypoints.publish_pyxis_image:main"
request-signature = "operatorcert.entrypoints.request_signature:main"
reserve-operator-name = "operatorcert.entrypoints.reserve_operator_name:main"
rm-operator-from-index = "operatorcert.entrypoints.rm_operator_from_index:main"
set-cert-project-repository = "operatorcert.entrypoints.set_cert_project_repository:main"
set-github-status = "operatorcert.entrypoints.set_github_status:main"
static-tests = "operatorcert.entrypoints.static_tests:main"
update-cert-project-status = "operatorcert.entrypoints.update_cert_project_status:main"
upload-artifacts = "operatorcert.entrypoints.upload_artifacts:main"
upload-signature = "operatorcert.entrypoints.upload_signature:main"
validate-catalog-format = "operatorcert.entrypoints.validate_catalog_format:main"
verify-changed-dirs = "operatorcert.entrypoints.verify_changed_dirs:main"
invalidate-preflight-versions = "operatorcert.entrypoints.invalidate_preflight_versions:main"
bulk-retrigger = "operatorcert.entrypoints.bulk_retrigger:main"
integration-tests = "operatorcert.entrypoints.integration_tests:main"


[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"

[dependency-groups]
operatorcert-dev = [
    "black>=23.3.0",
    "pytest>=7.3.2",
    "pytest-cov>=4.1.0",
    "yamllint>=1.32.0",
    "requests-mock>=1.11.0",
    "python-dateutil>=2.8.2",
    "bandit>=1.7.5",
    "safety>=2.3.4",
    "mypy>=1.5.1",
    "types-PyYAML>=6.0.12.11",
    "types-python-dateutil>=2.8.19.14",
    "types-requests>=2.31.0.2",
    "pylint>=2.17.5",
    "ansible-core>=2.17.6",
    "jmespath>=1.0.1",
    "kubernetes>=31.0.0",
    "ansible-lint>=24.10.0",
]
tox = ["tox>=4.16.0", "tox-pdm>=0.7.2"]

# The following two lines are required to install ansible-lint under pdm
# Ref: https://github.com/pdm-project/pdm/issues/1575
[tool.pdm.resolution.overrides]
will-not-work-on-windows-try-from-wsl-instead = "0.1.0"
