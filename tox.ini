[vars]
OPERATOR_MODULE = operator-pipeline-images/operatorcert
OPERATOR_TESTS = operator-pipeline-images/tests
MYPY_SOURCE_ARGS = --strict --ignore-missing-imports
MYPY_TEST_ARGS = {[vars]MYPY_SOURCE_ARGS}

[tox]
envlist = test,
          black,
          yamllint,
          bandit,
          safety,
          pdm-lock-check
          mypy
          pylint
skipsdist = True

[testenv]
extras = dev

[testenv:test]
groups = operatorcert
         operatorcert-dev
commands = pytest -v \
       --cov {[vars]OPERATOR_MODULE} \
       --cov-report term-missing \
       --cov-fail-under 100

[testenv:black]
groups = operatorcert-dev
commands = black --check --diff .

[testenv:black-format]
groups = operatorcert-dev
commands = black .

[testenv:mypy]
groups = operatorcert-dev
commands = mypy {[vars]MYPY_SOURCE_ARGS} {[vars]OPERATOR_MODULE}
           mypy {[vars]MYPY_TEST_ARGS} {[vars]OPERATOR_TESTS}

[testenv:pylint]
groups =
    operatorcert-dev
    operatorcert
commands = pylint {[vars]OPERATOR_MODULE} \
                  --min-similarity-lines 9 \
                  -d fixme

[testenv:yamllint]
basepython = python3.11
groups = operatorcert-dev, operatorcert
files =
    .
commands =
    yamllint {[testenv:yamllint]files}


[testenv:bandit]
groups = operatorcert-dev
commands = bandit -r operator-pipeline-images/operatorcert -ll

[testenv:safety]
groups = operatorcert-dev
allowlist_externals = pdm
commands = pdm export \
            --without-hashes \
            -G ":all" \
            -f requirements \
            -o /tmp/requirements.txt
           safety check -r /tmp/requirements.txt

[testenv:pdm-lock-check]
allowlist_externals = pdm
commands = pdm lock --check
