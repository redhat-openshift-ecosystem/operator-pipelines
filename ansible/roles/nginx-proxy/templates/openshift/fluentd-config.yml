---
apiVersion: v1
kind: Secret
metadata:
  name: 'loki-fluentd-{{ suffix }}'
  labels:
    io.kompose.service: loki
    app: API-key-server
    suffix: '{{ suffix }}'
    env: '{{ env }}'
    paas.redhat.com/appcode: "{{ loki_app_code }}"
type: Opaque 
stringData: 
  fluentd.conf: |-
    # fluentd
    <source>
      @type http_healthcheck
      port 8082
      bind 0.0.0.0
    </source>
    <label @FLUENT_LOG>
      # throw those away, since they are already
      # logged in the stdout
      <match fluent.*>
        @type null
      </match>
    </label>

    # nginx
    <source>
      @type tail
      tag nginx.access
      path {{ nginx_access_log_location }}
      pos_file /tmp/nginx_access.log.pos
      <parse>
        @type regexp
        expression /^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<trace_id>[^\]]*)\] \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)"(?:\s+\"?(?<http_x_forwarded_for>[^\"]*)\"?)?)?$/
        time_format "%d/%b/%Y:%H:%M:%S %z"
      </parse>
    </source>
    <source>
      @type tail
      tag nginx.error
      path {{ nginx_error_log_location }}
      pos_file /tmp/nginx_error.log.pos

      format multiline
      format_firstline /^\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2} \[\w+\] (?<pid>\d+).(?<tid>\d+): /
      format1 /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+).(?<tid>\d+): (?<message>.*)/
      multiline_flush_interval 3s
    </source>

    # common
    <filter **>
      @type record_transformer
      <record>
        source {{ community_signing_pipeline_name }}
        sourcetype {{ community_signing_pipeline_name }}:${tag}
        environment {{ env }}
      </record>
    </filter>

    <match nginx.**>
      @type splunk_hec
      hec_host {{ splunk_hec }}
      hec_port {{ splunk_port }}
      hec_token {{ splunk_token }}

      index rh_services
      source_key source
      sourcetype_key sourcetype
      host_key host
    </match>
