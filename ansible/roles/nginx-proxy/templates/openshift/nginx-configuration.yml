---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: "{{ nginx_proxy_name }}"
    env: "{{ env }}"
    suffix: "{{ suffix }}"
  name: "{{ nginx_proxy_name }}-{{ suffix }}"
data:
  nginx.conf: |-
    worker_processes auto;
    pid /tmp/nginx.pid;

    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {

      log_format logger-json escape=json '{
                                           "time": $msec, \
                                           "time_local":"$time_local", \
                                           "resp_body_size": $body_bytes_sent, \
                                           "host": "$http_host", \
                                           "address": "$remote_addr", \
                                           "request":"$request", \
                                           "request_length": $request_length, \
                                           "method": "$request_method", \
                                           "uri": "$request_uri", \
                                           "status": $status,  \
                                           "user_agent": "$http_user_agent", \
                                           "resp_time": $request_time, \
                                           "upstream_addr": "$upstream_addr" \
                                           }';

      server {

          listen 8080;

          # Logging in json format
          access_log {{ nginx_proxy_access_log_location }} logger-json;
          error_log  {{ nginx_proxy_error_location }} logger-json;

          # enable compression
          gzip on;
          gzip_types text/plain application/json;
          gzip_min_length 1024;

          location /_proxy/ping {

              # Mitigate 500 Gateway timeout errors
              proxy_connect_timeout       600;
              proxy_send_timeout          600;
              proxy_read_timeout          600;
              send_timeout                600;

              return 200 'pong';
          }

          location / {
              auth_basic "Community signing pipeline";
              auth_basic_user_file {{ nginx_basic_user_file_path }};
              proxy_pass {{ nginx_proxy_service_url }};
          }
      }
    }
