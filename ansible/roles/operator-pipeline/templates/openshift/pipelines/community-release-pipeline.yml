---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: community-release-pipeline
spec:
  params:
    - name: git_repo_url
    - name: git_base_branch
    - name: git_pr_title
    - name: git_pr_url
    - name: git_username
    - name: git_commit
    - name: git_commit_base
    - name: env
    - name: pipeline_image
      default: "quay.io/redhat-isv/operator-pipelines-images:released"
    - name: github_token_secret_name
      description: The name of the Kubernetes Secret that contains the GitHub token.
      default: github-bot-token

    - name: github_token_secret_key
      description: The key within the Kubernetes Secret that contains the GitHub token.
      default: github_bot_token
  workspaces:
    - name: repository
    - name: results
    - name: ssh-dir
      optional: true
  tasks:
    - name: clone-repository
      taskRef:
        name: git-clone
        kind: Task
      params:
        - name: url
          value: $(params.git_repo_url)
        - name: revision
          value: $(params.git_base_branch)
        - name: depth
          value: 25
        - name: gitInitImage
          value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:bc551c776fb3d0fcc6cfd6d8dc9f0030de012cb9516fac42b1da75e6771001d9
      workspaces:
        - name: output
          workspace: repository
          subPath: src
        - name: ssh-directory
          workspace: ssh-dir

    - name: detect-changes
      taskRef:
        name: parse-repo-changes
        kind: Task
      runAfter:
        - clone-repository
      params:
        - name: pipeline_image
          value: $(params.pipeline_image)
        - name: head_commit
          value: $(params.git_commit)
        - name: base_commit
          value: $(params.git_commit_base)
      workspaces:
        - name: repo
          workspace: repository
          subPath: src

    # acquire/lease the resource to resolve the conflict of concurrent pipelineruns
    - name: acquire-lease
      runAfter:
        - detect-changes
      taskRef:
        name: acquire-lease
      params:
        - name: pipeline_image
          value: "$(params.pipeline_image)"
        - name: lease-name
          value: "community-pipeline"

  finally:
    # Release the acquired resource
    - name: release-lease
      taskRef:
        name: release-lease
      params:
        - name: pipeline_image
          value: "$(params.pipeline_image)"
        - name: lease-name
          value: "community-pipeline"

    # Comment with a pipeline summary
    - name: github-add-summary-comment
      taskRef:
        name: github-pipelinerun-summary
      params:
        - name: pipeline_image
          value: "$(params.pipeline_image)"
        - name: request_url
          value: "$(params.git_pr_url)"
        - name: github_token_secret_name
          value: "$(params.github_token_secret_name)"
        - name: github_token_secret_key
          value: "$(params.github_token_secret_key)"
        - name: pipelinerun
          value: "$(context.pipelineRun.name)"
        - name: upload_pipeline_logs
          value: "true"
      workspaces:
        - name: output
          workspace: results
          subPath: summary
