---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-supported-versions
spec:
  params:
    - name: pipeline_image
    - name: bundle_path
      description: path indicating the location of the certified bundle within the repository
  results:
    - name: max_supported_ocp_version
      description: Maximum version of OpenShift supported by this Operator
    - name: max_supported_index
      description: Pull spec for the index corresponding to the max OCP version
    - name: indices
      description: All known supported OCP indices paths
    - name: indices_ocp_versions
      description: All known supported OCP indices' OCP versions
    - name: max_version_indices
      description: Latest known supported OCP indices
    - name: ocp_version
      description: OCP version annotation of the bundle
  workspaces:
    - name: source
  steps:
    - name: supported-version-check
      image: "$(params.pipeline_image)"
      workingDir: $(workspaces.source.path)
      script: |
        #! /usr/bin/env bash
        set -xe

        ORGANIZATION=$(cat config.yaml | yq -r '.organization')
        VERSION_INFO=$(ocp-version-info $(params.bundle_path) $ORGANIZATION)
        echo $VERSION_INFO | jq

        echo $VERSION_INFO \
          | jq -r '.max_version_index.ocp_version' \
          | tr -d '\n\r' \
          | tee $(results.max_supported_ocp_version.path)

        echo $VERSION_INFO \
          | jq -r '.max_version_index.path' \
          | tr -d '\n\r' \
          | tee $(results.max_supported_index.path)

        echo $VERSION_INFO \
          | jq -r '[.indices[].path]' \
          | tr -d '\n\r' \
          | tee $(results.indices.path)

        echo $VERSION_INFO \
          | jq -r '[.indices[].ocp_version]' \
          | tr -d '\n\r' \
          | tee $(results.indices_ocp_versions.path)

        echo $VERSION_INFO \
          | jq -r '.max_version_index.path' \
          | tr -d '\n\r' \
          | tee $(results.max_version_indices.path)

        echo $VERSION_INFO \
          | jq -r '.versions_annotation' \
          | tr -d '\n\r' \
          | tee $(results.ocp_version.path)
