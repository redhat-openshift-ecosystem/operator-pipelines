---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: publish-resources
spec:
  params:
    - name: pipeline_image
    - name: cert_project_id
      description: ID of the bundle Certification Project (as in bundle ci.yaml)
    - name: org_id
      description: Partner's Organization ID
    - name: pyxis_ssl_secret_name
      description: Kubernetes secret name that contains the Pyxis SSL files. Valid only when internal Pyxis is used.
    - name: pyxis_ssl_cert_secret_key
      description: The key within the Kubernetes secret that contains the Pyxis SSL cert. Valid only when internal Pyxis is used.
    - name: pyxis_ssl_key_secret_key
      description: The key within the Kubernetes secret that contains the Pyxis SSL key. Valid only when internal Pyxis is used.
    - name: connect_registry
      description: Connect registry host
    - name: pyxis_url
      default: https://pyxis.engineering.redhat.com
  volumes:
    - name: pyxis-ssl-volume
      secret:
        secretName: "$(params.pyxis_ssl_secret_name)"
  steps:
    - name: publish-vendor
      image: "$(params.pipeline_image)"
      env:
        - name: PYXIS_CERT_PATH
          value: /etc/pyxis-ssl-volume/$(params.pyxis_ssl_cert_secret_key)
        - name: PYXIS_KEY_PATH
          value: /etc/pyxis-ssl-volume/$(params.pyxis_ssl_key_secret_key)
      volumeMounts:
        - name: pyxis-ssl-volume
          readOnly: true
          mountPath: "/etc/pyxis-ssl-volume"
      script: |
        #! /usr/bin/env bash
        set -xe

        echo "Publishing the Vendor"

        publish \
          --verbose \
          --pyxis-url "$(params.pyxis_url)" \
            vendor \
              --org-id "$(params.org_id)"
    - name: publish-repository
      image: "$(params.pipeline_image)"
      env:
        - name: PYXIS_CERT_PATH
          value: /etc/pyxis-ssl-volume/$(params.pyxis_ssl_cert_secret_key)
        - name: PYXIS_KEY_PATH
          value: /etc/pyxis-ssl-volume/$(params.pyxis_ssl_key_secret_key)
      volumeMounts:
        - name: pyxis-ssl-volume
          readOnly: true
          mountPath: "/etc/pyxis-ssl-volume"
      script: |
        #! /usr/bin/env bash
        set -xe

        echo "Publishing the Repository"

        publish \
          --verbose \
          --pyxis-url "$(params.pyxis_url)" \
            repository \
              --connect-registry "$(params.connect_registry)" \
              --cert-project-id "$(params.cert_project_id)"
