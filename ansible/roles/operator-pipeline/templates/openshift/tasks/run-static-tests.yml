---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: run-static-tests
spec:
  description: Run the static test suite against a given bundle.

  params:
    - name: pipeline_image
      description: The common pipeline image.

    - name: pull_request_url
      description: URL to Github pull request with a new bundle submission.

    - name: operator_name
      description: Name of the operator under test.

    - name: bundle_version
      description: Version of the bundle under test.

    - name: github_token_secret_key
      description: The key within the Kubernetes Secret that contains the GitHub token.
      default: token

    - name: github_token_secret_name
      description: The name of the Kubernetes Secret that contains the GitHub token.
      default: github

    - name: test_suite
      description: A path to a test suite that is executed

  results:
    - name: messages_count
      description: Number of messages generated by the tests (failures+warnings)

    - name: failures_count
      description: Number of failures generated by the tests

  workspaces:
    - name: source
      description: Clone of the repo

    - name: output
      description: Storage for the results file (json)

  steps:
    - name: run-suite
      image: "$(params.pipeline_image)"
      workingDir: $(workspaces.source.path)
      env:
        - name: GH_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github_token_secret_name)
              key: $(params.github_token_secret_key)
      script: |
        #!/usr/bin/env bash
        set -xe

        EXTRA_ARGS=""

        # Get labels from the pull request
        gh pr view "$(params.pull_request_url)" --json labels > labels.json

        # Following command filters out labels that start with prefix and merge them to single string separated by comma
        SKIP_TESTS=`jq -r '.labels[] | select(.name | startswith("tests/skip")) | .name' labels.json | paste -sd "," |sed 's/tests\/skip\///g'`

        if [[ $SKIP_TESTS != "" ]]; then
          echo "Following tests are skipped: $SKIP_TESTS"
          EXTRA_ARGS+=" --skip-tests $SKIP_TESTS"
        fi

        JSON_RESULTS_FILE="$(workspaces.output.path)/static-test-results.json"

        static-tests --verbose \
          --output-file "$JSON_RESULTS_FILE" \
          --repo-path "$(workspaces.source.path)" \
          --suite "$(params.test_suite)" $EXTRA_ARGS \
          "$(params.operator_name)" "$(params.bundle_version)"

        jq . <$JSON_RESULTS_FILE
        jq -r '(.outputs//[])|length' <$JSON_RESULTS_FILE \
          | tr -d '\r\n' >$(results.messages_count.path)
        jq -r '[(.outputs//[])[]|select(.type=="error")]|length' <$JSON_RESULTS_FILE \
          | tr -d '\r\n' >$(results.failures_count.path)
