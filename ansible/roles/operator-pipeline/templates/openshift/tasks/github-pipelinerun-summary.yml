---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: github-pipelinerun-summary
spec:
  description: >-
    This task adds a PipelineRun summary comment to a GitHub pull request.
  workspaces:
    - name: output
      description: Scratch space and storage for the comment

  params:
    - name: pipelines_cli_tkn_image
      description: Teknton cli image
      default: "registry.redhat.io/openshift-pipelines/pipelines-cli-tkn-rhel8@sha256:7fdeb7eae1727957ba7a7c0e812e5306ffbc594b7759ab058b262251c1ad6fd2"
    - name: github_host_url
      description: |
        The GitHub host, adjust this if you run a GitHub enteprise.
      default: "https://api.github.com"

    - name: request_url
      description: |
        The GitHub issue or pull request URL where we want to add a new
        comment.

    - name: github_token_secret_name
      description: |
        The name of the Kubernetes Secret that contains the GitHub token.
      default: github

    - name: github_token_secret_key
      description: |
        The key within the Kubernetes Secret that contains the GitHub token.
      default: token

    - name: pipelinerun
      description: The name of the PipelineRun to summarize.

    - name: pipeline_image
      description: The common pipeline image.

    - name: upload_pipeline_logs
      default: "false"
      description: |
        A flag that determines whether pipeline logs should be uploaded to Github gists
      type: string

    - name: comment_suffix
      description: A comment to append to the end of the summary
      default: ""

  steps:
    - name: gather-info
      workingDir: $(workspaces.output.path)
      image: "$(params.pipelines_cli_tkn_image)"
      script: |
        #! /usr/bin/env bash
        set -xe

        PR_NAME="$(params.pipelinerun)"
        mkdir $PR_NAME

        echo "Getting pipeline logs"
        tkn pipelinerun logs "$(params.pipelinerun)" > $PR_NAME/$(params.pipelinerun).log

        echo "Getting PipelineRun details"
        tkn pipelinerun describe $PR_NAME -o json > $PR_NAME/pipelinerun.json

        echo "Getting TaskRun details"
        tkn taskrun list \
          --label 'tekton.dev/pipelineRun'=="$PR_NAME" \
          -o jsonpath='{.items}' \
          > $PR_NAME/taskruns.json

        chmod -R 777 $PR_NAME

    - name: upload-pipeline-logs
      workingDir: $(workspaces.output.path)
      image: "$(params.pipeline_image)"
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github_token_secret_name)
              key: $(params.github_token_secret_key)
      script: |
        #! /usr/bin/env bash
        set -ex

        if [[ "$(params.upload_pipeline_logs)" == "true" ]]; then
          echo "Uploading pipeline logs"

          PR_NAME="$(params.pipelinerun)"
          create-github-gist \
            --input-file $PR_NAME/$(params.pipelinerun).log \
            --output-file $PR_NAME/gits_output.json

          echo "Logs have been successfully uploaded"
        fi

    - name: build-comment
      workingDir: $(workspaces.output.path)
      image: "$(params.pipeline_image)"
      script: |
        #! /usr/bin/env bash
        set -xe

        PR_NAME="$(params.pipelinerun)"

        pipelinerun-summary $PR_NAME/pipelinerun.json $PR_NAME/taskruns.json \
          > $PR_NAME/comment.md

        if [[ "$(params.upload_pipeline_logs)" == "true" ]]; then
          cat $PR_NAME/gits_output.json
          GIST_URL=`cat $PR_NAME/gits_output.json | jq -r ".gist_url"`
          echo "Pipeline logs: $GIST_URL" >> $PR_NAME/comment.md
        fi

        if [ ! -z "$(params.comment_suffix)" ]; then
          echo "$(params.comment_suffix)" >> $PR_NAME/comment.md
        fi

    - name: post-comment
      workingDir: $(workspaces.output.path)
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github_token_secret_name)
              key: $(params.github_token_secret_key)
      image: "$(params.pipeline_image)"
      script: |
        #! /usr/bin/env bash
        set -xe -o pipefail

        echo "Posting GitHub comment to issue (or PR) $(params.request_url)"

        github-add-comment \
          --github-host-url "$(params.github_host_url)" \
          --request-url "$(params.request_url)" \
          --comment-file "$(params.pipelinerun)/comment.md"
