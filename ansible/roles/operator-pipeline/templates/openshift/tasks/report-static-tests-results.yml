---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: report-static-tests-results
spec:
  description: React to the results of the static tests.

  params:
    - name: pipeline_image
      description: The common pipeline image.

    - name: messages_count
      description: |
        Number of messages generated by the tests (failures+warnings)

    - name: failures_count
      description: Number of failures generated by the tests

    - name: github_host_url
      description: |
        The GitHub host, adjust this if you run a GitHub enterprise.
      default: "https://api.github.com"

    - name: request_url
      description: |
        The GitHub issue or pull request URL where we want to add a new
        comment.

    - name: github_token_secret_name
      description: |
        The name of the Kubernetes Secret that contains the GitHub token.
      default: github

    - name: github_token_secret_key
      description: |
        The key within the Kubernetes Secret that contains the GitHub token.
      default: token

  workspaces:
    - name: output
      description: Storage for the results file (json)

  steps:
    - name: build-comment
      image: "$(params.pipeline_image)"
      workingDir: "$(workspaces.output.path)"
      script: |
        #!/usr/bin/env bash
        set -xe

        [ "$(params.messages_count)" -gt 0 ] || exit 0

        JSON_RESULTS_FILE="$(workspaces.output.path)/static-test-results.json"
        MESSAGE_FILE="$(workspaces.output.path)/static-test-results.md"

        echo '# Static test results' >$MESSAGE_FILE
        echo >>$MESSAGE_FILE
        echo '|Status|Check|Message|' >>$MESSAGE_FILE
        echo '|:----:|:----|:------|' >>$MESSAGE_FILE
        jq -r '(.outputs//[])[]|"|\(.type)|\(.check)|\(.message)|"' \
          <$JSON_RESULTS_FILE >>$MESSAGE_FILE
        echo >>$MESSAGE_FILE
        # Replace status words with corresponding symbols
        sed -ie 's/^|warning|/|:warning:|/g;s/^|error|/|:x:|/g' "$MESSAGE_FILE"

    - name: post-comment
      image: "$(params.pipeline_image)"
      workingDir: "$(workspaces.output.path)"
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: "$(params.github_token_secret_name)"
              key: "$(params.github_token_secret_key)"
      script: |
        #!/usr/bin/env bash
        set -xe

        [ "$(params.messages_count)" -gt 0 ] || exit 0

        echo "Posting GitHub comment to issue (or PR) $(params.request_url)"

        github-add-comment \
          --github-host-url "$(params.github_host_url)" \
          --request-url "$(params.request_url)" \
          --comment-file "$(workspaces.output.path)/static-test-results.md"

    - name: check-for-failures
      image: "$(params.pipeline_image)"
      workingDir: "$(workspaces.output.path)"
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: "$(params.github_token_secret_name)"
              key: "$(params.github_token_secret_key)"
      script: |
        #!/usr/bin/env bash
        set -xe

        if [ "$(params.failures_count)" -gt 0 ] ; then
          github-labels --pull-request-url "$(params.request_url)" \
            --add-labels validation-failed
          echo "Static tests failed! A summary was added to the PR."
          exit 1
        else
          github-labels --pull-request-url "$(params.request_url)" \
            --remove-labels validation-failed
        fi
