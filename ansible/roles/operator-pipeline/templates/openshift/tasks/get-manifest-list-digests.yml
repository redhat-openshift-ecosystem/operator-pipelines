---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-manifest-list-digests
spec:
  params:
    - name: manifest_digests
      description: |
        Comma-separated list of manifest digests generated by the IIB builds, in the
        format of registry.redhat.io/redhat/test-index@sha256:123
    - name: environment
      description: |
        Which environment the pipeline is running in. Can be one of [dev, qa, stage, prod]
    - name: pipeline_image
  results:
    - name: docker_references
      description: Comma-separated list of indices
    - name: manifest_list_digests
      description: Comma-separated list of digests from registry manifest lists
  workspaces:
    - name: registry-credentials
      description: Docker config for retrieving the bundle image
  steps:
    - name: podman-manifest-inspect
      image: "$(params.pipeline_image)"
      script: |
        set -xe

        # no-op for dev or qa since IIB doesn't run
        # output dummy/test values for signing purposes
        if [[ $(params.environment) == "dev" || $(params.environment) == "qa" ]]; then
          echo -n "registry.redhat.io/redhat/test-operator-index:v4.9" | tee "$(results.docker_references.path)"
          echo "$(params.manifest_digests)" | awk -F '@' '{print $2}' | tee "$(results.manifest_list_digests.path)"
          echo "Getting manifest list digests is a NOOP for dev and qa environments at this time."
          exit 0
        fi

        DIGEST_LIST=$(echo $(params.manifest_digests) | tr "," " ")

        if [[ $(params.environment) != "prod" ]]; then
          export HTTP_PROXY="http://squid.corp.redhat.com:3128"
          export HTTPS_PROXY="http://squid.corp.redhat.com:3128"

          # TODO find a better way to set registry based on env
          DIGEST_LIST=${DIGEST_LIST//registry.redhat.io/registry.stage.redhat.io}
        fi

        # podman manifest inspect doesn't support any of the authfile options, this is the only way
        cp $(workspaces.registry-credentials.path)/.dockerconfigjson $HOME/.docker/config.json

        DOCKER_REFERENCES=""
        MANIFEST_LIST_DIGESTS=""
        for i in $DIGEST_LIST
        do
            REFERENCE=$(echo $i | awk -F '@' '{print $1}')

            # remove version from reference before combining with sha
            DIGEST=$(echo $REFERENCE | awk -F ':' '{print $1}')
            DIGEST+=@$(echo $i | awk -F '@' '{print $2}')

            MANIFEST_LIST=$(podman manifest inspect $DIGEST | jq -r '.manifests[].digest')

            # create comma separated index images that match each digest
            for j in $MANIFEST_LIST
            do
              DOCKER_REFERENCES+=$REFERENCE,
            done

            # parse json output of manifest inspect into comma separated list of manifest digests for signing
            MANIFEST_LIST_DIGESTS+=$(echo $MANIFEST_LIST | tr " " ",")
            MANIFEST_LIST_DIGESTS+=","

        done

        echo $DOCKER_REFERENCES | tee "$(results.docker_references.path)"
        echo $MANIFEST_LIST_DIGESTS | tee "$(results.manifest_list_digests.path)"
