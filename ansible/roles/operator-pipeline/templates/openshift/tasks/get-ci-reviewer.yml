---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-ci-reviewer
spec:
  params:
    - name: pipeline_image
    - name: git_username
    - name: operator_name
    - name: pr_url
    - name: github_token_secret_key
      description: The key within the Kubernetes Secret that contains the GitHub token.
      default: token
    - name: github_token_secret_name
      description: The name of the Kubernetes Secret that contains the GitHub token.
      default: github
  workspaces:
    - name: base
      description: Cloned repository at the base branch
  results:
    - name: author_is_reviewer
      description: >-
        Check if the author of the PR is listed also as a reviewer
    - name: list_reviewers
      description: >-
        Return list of all reviewers from ci.yaml file except author of the pull request
    - name: repo_maintainers
      description: >-
        List of repository maintainers stored in config.yaml at the root of the repo
  steps:
    - name: get-ci-reviewer
      image: "$(params.pipeline_image)"
      workingDir: $(workspaces.base.path)
      script: |
        #! /usr/bin/env bash
        set -e
        # storing repo maintainers from config.yaml file
        MAINTAINERS="config.yaml"
        yq -r '(.maintainers//[])[]' $MAINTAINERS >$(results.repo_maintainers.path)
        # storing reviewers from ci.yaml file
        CI="operators/$(params.operator_name)/ci.yaml"
        echo "Getting reviewers from the ci.yaml ..."
        if [ ! -e "$CI" ]; then
          echo >$(results.list_reviewers.path)
          echo -n false >$(results.author_is_reviewer.path)
        else
          yq -r '(.reviewers//[])[]' $CI >$(results.list_reviewers.path)
          yq -r ".reviewers//[]|index(\"$(params.git_username)\") != null" $CI | tr -d '\r\n' >$(results.author_is_reviewer.path)
        fi
    - name: approve-pull-request
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github_token_secret_name)
              key: $(params.github_token_secret_key)
      image: "$(params.pipeline_image)"
      script: |
        #! /usr/bin/env bash
        set -e
        AUTHOR_IS_REVIEWER=$(cat $(results.author_is_reviewer.path))
        CI_REVIEWERS=$(cat $(results.list_reviewers.path))
        REPO_MAINTAINERS=$(cat $(results.repo_maintainers.path))
        # requesting review from repo maintainers if there are no reviewers in ci.yaml or no ci.yaml file
        if [ -z "$CI_REVIEWERS" ]; then
          gh pr edit $(params.pr_url) --add-reviewer `echo $REPO_MAINTAINERS | xargs | tr ' ' ','`
          echo "Reviewers are missing in ci.yaml file - requesting review from repository maintainers."
        else
          # requesting review from PR author if it is included in the reviewers field
          if [ "$AUTHOR_IS_REVIEWER" = true ]; then
            gh pr review $(params.pr_url) --approve
            echo "This pull request was automatically approved due to PR author is in the reviewers list."
          else
            # request a review from the reviewers listed in ci.yml file if the author is not listed in ci.yaml
            gh pr edit $(params.pr_url) --add-reviewer `echo $CI_REVIEWERS | xargs | tr ' ' ','`
            echo "Author of PR is not listed as one of the reviewers. Requesting review from the reviewers listed in the ci.yaml file."
          fi
        fi
