---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-ci-reviewer
spec:
  params:
    - name: pipeline_image
    - name: git_username
    - name: operator_name
    - name: pr_url
    - name: github_token_secret_key
      description: The key within the Kubernetes Secret that contains the GitHub token.
      default: token
    - name: github_token_secret_name
      description: The name of the Kubernetes Secret that contains the GitHub token.
      default: github
  workspaces:
    - name: repo
      description: Cloned repository
  results:
    - name: author_is_reviewer
      description: >-
        Check if the author of the PR is listed also as a reviewer
    - name: list_reviewers
      description: >-
        Return list of all reviewers from ci.yaml file except author of the pull request
  steps:
    - name: get-ci-reviewer
      image: "$(params.pipeline_image)"
      workingDir: $(workspaces.repo.path)
      script: |
        #! /usr/bin/env bash
        set -e
        # do not use -x to not leak github secrets into logs!!!
        
        get-ci-reviewer \
          --repo-path="$(workspaces.repo.path)" \
          --git-username="$(params.git_username)" \
          --operator-name="$(params.operator_name)" \
          --output-file /tmp/output.json \
          --verbose
        
        list_of_reviewers=$(jq -r '.all_reviewers[]' /tmp/output.json)
        bool_reviewer="$(jq -r '.is_reviewer' /tmp/output.json)"
        
        # redirecting results variables to /dev/null so they would not be printed
        echo -n "$list_of_reviewers" | tee $(results.list_reviewers.path) > /dev/null
        echo -n "$bool_reviewer" | tee $(results.author_is_reviewer.path) > /dev/null

    - name: approve-pull-request
      env:
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github_token_secret_name)
              key: $(params.github_token_secret_key)
      image: "$(params.pipeline_image)"
      script: |
        #! /usr/bin/env bash
        set -e
        # do not use -x to not leak github secrets into logs!!!

        # assigning variables for curl requests
        PR_NUMBER=$(basename "$(params.pr_url)")
        REPO_NAME=$(echo "$(params.pr_url)" | sed -e "s|^https://github.com/||" -e "s|/pull/.*$||")
        API_URL_APPROVE=https://api.github.com/repos/${REPO_NAME}/pulls/${PR_NUMBER}/reviews
        API_URL_REVIEWERS=https://api.github.com/repos/${REPO_NAME}/pulls/${PR_NUMBER}/requested_reviewers

        AUTHOR_IS_REVIEWER=$(cat $(results.author_is_reviewer.path))
        CI_REVIEWERS=$(cat $(results.list_reviewers.path))
                
        # requesting review from repo maintainers if there are no reviewers in ci.yaml 
        if [ -z "$CI_REVIEWERS" ]; then
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d '{"reviewers": ["ezopezo", "mporrato", "allda", "tomasbakk", "haripate"]}' \
            $API_URL_REVIEWERS > /dev/null
        
          echo "No reviewers detected in ci.yaml file - requesting review from repo maintainers"
        
        else  
         # automatically approving PR if the author of PR is included in list of reviewers
          if [ "$AUTHOR_IS_REVIEWER" = "true" ]; then
            curl --X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: bearer ${GITHUB_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d '{"body": "Pull request has been approved", "event": "APPROVE"}' \
              $API_URL_APPROVE > /dev/null
            
            echo "This pull request was automatically approved due to PR author is in the reviewers list"
        
          else
            # request a review from the reviewers listed in ci.yml file if the author is not listed in ci.yaml
            for reviewer in $CI_REVIEWERS; do
              curl -L \
                -X POST \
                -H "Accept: application/vnd.github.v3+json" \
                -H "Authorization: bearer ${GITHUB_TOKEN}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                -d '{"reviewers": ["'"$reviewer"'"]}' \
                $API_URL_REVIEWERS > /dev/null
                
              echo "Requesting review from reviewers in ci.yaml file: $reviewer"
            done
          fi
        fi
