---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: check-operator-name
spec:
  params:
    - name: pipeline_image
    - name: association
      description: The association that the operator belongs in, usually the isv_pid.
    - name: operator_name
      description: The operator name to be reserved.
    - name: pyxis_api_key_secret_name
      default: default-api-secret
      description: Kubernetes secret name that contains Pyxis API key. Valid only when external Pyxis is used.
    - name: pyxis_api_key_secret_key
      default: pyxis_api_key
      description: The key within the Kubernetes secret that contains Pyxis API key. Valid only when external Pyxis is used.
    - name: pyxis_ssl_secret_name
      default: default-ssl-secret
      description: Kubernetes secret name that contains the Pyxis SSL files. Valid only when internal Pyxis is used.
    - name: pyxis_ssl_cert_secret_key
      default: default-ssl-cert
      description: The key within the Kubernetes secret that contains the Pyxis SSL cert. Valid only when internal Pyxis is used.
    - name: pyxis_ssl_key_secret_key
      default: default-ssl-key
      description: The key within the Kubernetes secret that contains the Pyxis SSL key.
    - name: pyxis_url
      description: Pyxis instance to reserve the operator name on.
      default: https://pyxis.engineering.redhat.com
  volumes:
    - name: pyxis-ssl-volume
      secret:
        secretName: "$(params.pyxis_ssl_secret_name)"
        optional: true
  steps:
    - name: check-operator-name
      image: "$(params.pipeline_image)"
      env:
        - name: PYXIS_CERT_PATH
          value: /etc/pyxis-ssl-volume/$(params.pyxis_ssl_cert_secret_key)
        - name: PYXIS_KEY_PATH
          value: /etc/pyxis-ssl-volume/$(params.pyxis_ssl_key_secret_key)
        - name: ASSOCIATION
          value: $(params.association)
        - name: PYXIS_API_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.pyxis_api_key_secret_name)
              key: $(params.pyxis_api_key_secret_key)
              optional: true
      volumeMounts:
        - name: pyxis-ssl-volume
          readOnly: true
          mountPath: "/etc/pyxis-ssl-volume"
      script: |
        #! /usr/bin/env bash
        set -xe

        echo "Checking if project already has operator name for association $ASSOCIATION"

        check-operator-name \
          --association $ASSOCIATION \
          --operator-name "$(params.operator_name)" \
          --pyxis-url "$(params.pyxis_url)" \
          --verbose
