---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: publish-to-index
spec:
  params:
    - name: pipeline_image
    - name: index_image_paths
      description: |
        Comma-separated list of index reference + manifest list digests generated by IIB
        builds, in the format of <from_index>+<temp_index_image>, example:
        registry.redhat.io/redhat/test-index:v4.6+registry-proxy.engineering.redhat.com/rh-osbs/iib@sha256:123
    - name: environment
      description: |
        Which environment the pipeline is running in. Can be one of [dev, qa, stage, prod]
    - name: organization
      description: Operator organization. Can be one of [certified-operators, redhat-marketplace, community-operators]
    - name: quay_push_final_index_secret
      description: |
        Name of the Quay credentials secret:
        - iib-quay-credentials (default) - for connect and marketplace repositories
        - community-push-final-index-quay-credentials - for community repositories
      default: iib-quay-credentials
  workspaces:
    - name: output
      description: Scratch space and storage for the comment and related data
  steps:
    - name: skopeo-copy
      # Pipeline image is needed for Red Hat internal SSL cert
      image: "$(params.pipeline_image)"
      env:
        - name: QUAY_USER
          valueFrom:
            secretKeyRef:
              name: "$(params.quay_push_final_index_secret)"
              key: username
        - name: QUAY_TOKEN
          valueFrom:
            secretKeyRef:
              name: "$(params.quay_push_final_index_secret)"
              key: password
        - name: ORGANIZATION
          value: "$(params.organization)"
      script: |
        #! /usr/bin/env bash
        # DO NOT USE `set -x`, to avoid revealing the quay token in logs!
        set -e

        # select the correct index
        case "$(params.environment)" in
            prod)
                case $ORGANIZATION in
                    certified-operators)
                      FROM_INDEX="quay.io/redhat/redhat----certified-operator-index"
                    ;;
                    redhat-marketplace)
                      FROM_INDEX="quay.io/redhat/redhat----redhat-marketplace-index"
                    ;;
                    community-operators)
                      FROM_INDEX="quay.io/redhat/redhat----community-operator-index"
                    ;;
                    *)
                      echo "Unknown value for organization: $ORGANIZATION"
                      exit 1
                    ;;
                esac
            ;;
            stage | integration-tests)
                case $ORGANIZATION in
                    certified-operators)
                      FROM_INDEX="quay.io/redhat-pending/redhat----certified-operator-index"
                    ;;
                    redhat-marketplace)
                      FROM_INDEX="quay.io/redhat-pending/redhat----redhat-marketplace-index"
                    ;;
                    community-operators)
                      FROM_INDEX="quay.io/redhat-pending/redhat----community-operator-index"
                    ;;
                    *)
                      echo "Unknown value for organization: $ORGANIZATION"
                      exit 1
                    ;;
                esac
            ;;
            *)
                echo "Publishing bundle to an index is a NOOP for dev and qa environments at this time."
                exit 0
            ;;
        esac

        echo "FROM_INDEX: $FROM_INDEX"
        # Replace internal registry with external address
        INDEX_NAME="${FROM_INDEX#*----}"
        if [[ "$(params.environment)" == "prod" ]]; then
          FROM_INDEX_PROXY="registry.redhat.io/redhat/${INDEX_NAME}"
        else
          FROM_INDEX_PROXY="registry.stage.redhat.io/redhat/${INDEX_NAME}"
        fi
        # Create folder for release info if it's non-existent
        RELEASE_INFO_DIR_PATH="$(workspaces.output.path)/release_info"
        mkdir -p "$RELEASE_INFO_DIR_PATH"

        echo "Copying index images to published repos..."

        TEMP_IMAGES=$(echo $(params.index_image_paths) | tr "," " ")

        SUFFIX=`date +%s`

        for i in $TEMP_IMAGES
        do
          SRC_IMAGE=$(echo $i | awk -F '+' '{print $2}')
          echo "Source image: $SRC_IMAGE"
          VERSION=$(echo $i | awk -F '+' '{print $1}' | awk -F ':' '{print $2}')
          DEST_IMAGE_VERSION_TAG="${FROM_INDEX}:${VERSION}"
          DEST_IMAGE_PERMANENT_TAG="${DEST_IMAGE_VERSION_TAG}-${SUFFIX}"

          echo "Dest images:"
          echo " - $DEST_IMAGE_VERSION_TAG"
          echo " - $DEST_IMAGE_PERMANENT_TAG"

          # Add version tag to an index
          skopeo \
            --command-timeout 300s copy \
            --retry-times 5 \
            --format v2s2 --all \
            --src-no-creds \
            --dest-creds $QUAY_USER:$QUAY_TOKEN \
            docker://$SRC_IMAGE \
            docker://$DEST_IMAGE_VERSION_TAG

          # Add permanent tag to an index
          skopeo \
            --command-timeout 300s copy \
            --retry-times 5 \
            --format v2s2 --all \
            --src-no-creds \
            --dest-creds $QUAY_USER:$QUAY_TOKEN \
            docker://$SRC_IMAGE \
            docker://$DEST_IMAGE_PERMANENT_TAG

          # Save data about updated indices to volume
          echo "- ${FROM_INDEX_PROXY}:${VERSION}" | tee -a "$RELEASE_INFO_DIR_PATH/updated_indices.txt"
        done
