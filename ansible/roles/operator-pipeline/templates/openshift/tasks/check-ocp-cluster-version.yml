---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: check-ocp-cluster-version
spec:
  params:
    - name: pipeline_image
    - name: indices_ocp_versions
      description: All known supported OCP indices' OCP versions
    - name: kubeconfig_secret_name
      description: The name of the Kubernetes Secret that contains the kubeconfig.
    - name: kubeconfig_secret_key
      description: The key within the Kubernetes Secret that contains the kubeconfig.
  volumes:
    - name: kubeconfig-volume
      secret:
        secretName: "$(params.kubeconfig_secret_name)"
  steps:
    - name: check-ocp-cluster-version
      image: "$(params.pipeline_image)"
      volumeMounts:
        - name: kubeconfig-volume
          readOnly: true
          mountPath: "/etc/kubeconfig-volume"
      script: |
        #! /usr/bin/env bash
        set -xe

        KUBECONFIG=/etc/kubeconfig-volume/$(params.kubeconfig_secret_key)
        CLUSTER_VERSION=$(oc get clusterversion -o jsonpath="{.items[0].status.desired.version}" --kubeconfig $KUBECONFIG)
        # Grab only the major and minor version for comparison
        CLUSTER_VERSION=$(echo $CLUSTER_VERSION | cut -d. -f1,2)
        # parse indices into a list of strings with OCP versions
        SUPPORTED_VERSIONS=$(echo '$(params.indices_ocp_versions)' | jq -r '.[]')

        for version in $SUPPORTED_VERSIONS; do
          if [ "$version" == "$CLUSTER_VERSION" ]; then
            echo "The Operator does claim support for the provided cluster version ($CLUSTER_VERSION)."
            exit 0
          fi
        done

        echo "The Operator does not claim support for the provided cluster version ($CLUSTER_VERSION)."
        exit 1
