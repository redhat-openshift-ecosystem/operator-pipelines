---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-manifest-digests
spec:
  params:
    - name: index_image_paths
      description: |
        Comma-separated list of index reference + manifest list digests generated by IIB
        builds, in the format of <from_index>+<temp_index_image>, example:
        registry.redhat.io/redhat/test-index:v4.6+registry-proxy.engineering.redhat.com/rh-osbs/iib@sha256:123
    - name: environment
      description: |
        Which environment the pipeline is running in. Can be one of [dev, qa, stage, prod]
    - name: pipeline_image
  results:
    - name: docker_references
      description: Comma-separated list of indices
    - name: manifest_digests
      description: Comma-separated list of manifest digests retrieved from registry
  steps:
    - name: podman-manifest-inspect
      image: "$(params.pipeline_image)"
      script: |
        set -xe

        ENV=$(params.environment)

        # no-op for dev or qa since IIB doesn't run
        # output dummy/test values for signing purposes
        if [[ $ENV == "dev" || $ENV == "qa" ]]; then
          echo -n "registry.redhat.io/redhat/test-operator-index:v4.9" | tee "$(results.docker_references.path)"
          echo "$(params.index_image_paths)" | awk -F '+' '{print $2}' | tee "$(results.manifest_digests.path)"
          echo "Getting manifest digests is a NOOP for dev and qa environments at this time."
          exit 0
        fi

        DIGEST_LIST=$(echo $(params.index_image_paths) | tr "," " ")

        DOCKER_REFERENCES=""
        MANIFEST_DIGESTS=""
        for i in $DIGEST_LIST
        do
            REFERENCE=$(echo $i | awk -F '+' '{print $1}')

            DIGEST=$(echo $i | awk -F '+' '{print $2}')

            MANIFEST_LIST=$(podman manifest inspect $DIGEST)
            MANIFEST_LIST=$(echo $MANIFEST_LIST | jq -r '.manifests[].digest')

            # create comma separated index images that match each digest
            for j in $MANIFEST_LIST
            do
              DOCKER_REFERENCES+=$REFERENCE,
            done

            # parse json output of manifest inspect into comma separated list of manifest digests for signing
            MANIFEST_DIGESTS+=$(echo $MANIFEST_LIST | tr " " ",")
            MANIFEST_DIGESTS+=","

        done

        echo -n $DOCKER_REFERENCES | tee "$(results.docker_references.path)"
        echo -n $MANIFEST_DIGESTS | tee "$(results.manifest_digests.path)"
