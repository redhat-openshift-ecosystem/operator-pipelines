---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: copy-image
spec:
  params:
    - name: pipeline_image
    - name: connect_repo_path
      description: Combined path of the repo on the Connect registry
    - name: src_image
      description: reference to the source bundle image
    - name: dest_image_registry_namespace_certproject
      description: reference to the destination bundle image registry
    - name: dest_image_tag
      description: reference to the destination bundle image tag
    - name: cert_project_required
      description: A flag distinguish between ISV and community operators
  workspaces:
    - name: src-registry-credentials
      description: Docker config for the source registry
    - name: dest-registry-credentials
      description: Docker config for the destination registry
  results:
    - name: container_digest
    - name: image_pullspec
  steps:
    - name: skopeo-copy
      image: "$(params.pipeline_image)"
      script: |
        set -xe

        if [ "$(params.cert_project_required)" == "true" ]; then
          echo "Image pullspec for community bundle is the source image itself."
          echo -n >"$(results.container_digest.path)
          echo -n "$(params.src_image)" > $(results.image_pullspec.path)
          exit 0
        fi

        SRC_AUTHFILE=$(workspaces.src-registry-credentials.path)/.dockerconfigjson
        DEST_AUTHFILE=$(workspaces.dest-registry-credentials.path)/.dockerconfigjson

        skopeo copy \
          --src-authfile $SRC_AUTHFILE \
          --dest-authfile $DEST_AUTHFILE \
          docker://$(params.src_image) \
          docker://"$(params.dest_image_registry_namespace_certproject):$(params.dest_image_tag)"


        skopeo copy \
          --src-authfile $SRC_AUTHFILE \
          --dest-authfile $DEST_AUTHFILE \
          docker://$(params.src_image) \
          docker://"$(params.dest_image_registry_namespace_certproject):latest"

        DIGEST=$(skopeo inspect --authfile $DEST_AUTHFILE docker://$(params.dest_image_registry_namespace_certproject):$(params.dest_image_tag) | jq -r .Digest)
        echo -n $DIGEST | tee $(results.container_digest.path)
        echo -n "$(params.connect_repo_path)@${DIGEST}" > $(results.image_pullspec.path)
