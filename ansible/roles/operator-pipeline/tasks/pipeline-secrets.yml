---

- name: Create Operator pipeline cert secret
  no_log: yes
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: operator-pipeline-api-certs
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        operator-pipeline.key: "{{ lookup('file', operator_pipeline_private_key_local_path, rstrip=False) | b64encode }}"
        operator-pipeline.pem: "{{ lookup('file', operator_pipeline_private_cert_local_path, rstrip=False) | b64encode }}"

- name: Create Operator hosted pipeline registry auth push/pull secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: hosted-pipeline-registry-auth-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        .dockerconfigjson: "{{ lookup('file', operator_hosted_pipeline_registry_auth_path, rstrip=False) | b64encode }}"

- name: Create Operator release pipeline registry auth pull secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: release-pipeline-registry-auth-pull-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        .dockerconfigjson: "{{ lookup('file', operator_release_pipeline_registry_auth_pull_path, rstrip=False) | b64encode }}"

- name: Create Operator release pipeline registry auth push secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: release-pipeline-registry-auth-push-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        .dockerconfigjson: "{{ lookup('file', operator_release_pipeline_registry_auth_push_path, rstrip=False) | b64encode }}"

- name: Create Operator release pipeline registry auth serve (read-only) secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: release-pipeline-registry-auth-serve-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        .dockerconfigjson: "{{ lookup('file', operator_release_pipeline_registry_auth_serve_path, rstrip=False) | b64encode }}"

- name: Create Operator pipeline github bot token secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: github-bot-token
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        github_bot_token: "{{ lookup('file', operator_pipeline_github_bot_token, rstrip=False) | b64encode }}"

- name: Create Operator pipeline github webhook secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: github-webhook-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        webhook-secret: "{{ lookup('file', operator_pipeline_webhook_secret, rstrip=False) | b64encode }}"

- name: Create Operator pipeline kerberos keytab secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: kerberos-keytab
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        krb5.keytab: "{{ lookup('file', kerberos_keytab, rstrip=False) | b64encode }}"

- name: Create Operator pipeline IIB quay credentials secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: iib-quay-credentials
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        username: "{{ iib_quay_username | b64encode }}"
        password: "{{ iib_quay_password | b64encode }}"

- name: Create OCP cluster Kubeconfig secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: ocp-registry-kubeconfig
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        kubeconfig: "{{ lookup('file', operator_pipeline_kubeconfig_ocp_local_path, rstrip=False) | b64encode }}"

- name: Create Prow cluster Kubeconfig secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: prow-kubeconfig
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        kubeconfig: "{{ lookup('file', operator_pipeline_kubeconfig_prow_local_path, rstrip=False) | b64encode }}"

- name: Create preflight decryption key secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: preflight-decryption-key
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        private: "{{ lookup('file', operator_pipeline_preflight_decryption_key_private_local_path, rstrip=False) | b64encode }}"
        public: "{{ lookup('file', operator_pipeline_preflight_decryption_key_public_local_path, rstrip=False) | b64encode }}"

- name: Create OCP cluster Hydra credentials secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: hydra-credentials
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        sso_client_id: "{{ lookup('file', operator_pipeline_hydra_sso_client_id_local_path, rstrip=False) | b64encode }}"
        sso_client_secret: "{{ lookup('file', operator_pipeline_hydra_sso_client_secret_local_path, rstrip=False) | b64encode }}"

- name: Create Operator pipeline gpg secret key
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: isv-gpg-key
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        operator-pipeline-gpg.key: "{{ lookup('file', operator_pipeline_gpg_key_path, rstrip=False) | b64encode }}"
        operator-pipeline-gpg.passphrase: "{{ lookup('file', operator_pipeline_gpg_passphrase_path, rstrip=False) | b64encode }}"

- name: Create quay OAuth token secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: quay-oauth-token
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        token: "{{ quay_oauth_token | b64encode }}"

- name: Create signing pub key secret
  no_log: yes
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: signing-pub-key
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        sig-key.pub: "{{ lookup('file', signing_pub_key_local_path, rstrip=False) | b64encode }}"

- name: Create GitHub SSH credentials secret for CI pipeline
  no_log: yes
  when: ci_pipeline_github_ssh_credentials_path is defined
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: github-ssh-credentials
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        id_rsa: "{{ lookup('file', ci_pipeline_github_ssh_credentials_path, rstrip=False) | b64encode }}"

- name: Create kubeconfig secret for CI pipeline
  no_log: yes
  when: ci_pipeline_kubeconfig_path is defined
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: kubeconfig
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        kubeconfig: "{{ lookup('file', ci_pipeline_kubeconfig_path, rstrip=False) | b64encode }}"

- name: Create Pyxis API key secret for CI pipeline
  no_log: yes
  when: ci_pipeline_pyxis_api_key is defined
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: pyxis-api-secret
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        pyxis_api_key: "{{ ci_pipeline_pyxis_api_key | b64encode }}"

- name: Create Github API key secret for CI pipeline
  no_log: yes
  when: ci_pipeline_github_personal_access_token is defined
  tags:
    - secrets
  k8s:
    state: present
    force: yes
    namespace: "{{ oc_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      type: opaque
      metadata:
        name: github-api-token
        labels:
          app: operator-pipeline
          suffix: "{{ suffix }}"
          env: "{{ env }}"
      data:
        GITHUB_TOKEN: "{{ ci_pipeline_github_personal_access_token | b64encode }}"
