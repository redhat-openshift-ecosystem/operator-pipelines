---
- name: "Check system binaries"
  ansible.builtin.include_tasks:
    file: verify.yml
  loop:
    - openssl
    - make
    - "{{ container_tool }}-compose"
  loop_control:
    loop_var: sb_item
  tags:
    - prerequisites
    - install
    - verify

- name: "Install grpcurl"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "grpcurl"
    package_version: "{{ grpcurl_version }}"
    package_version_command: "--version"
    package_url: "https://github.com/fullstorydev/grpcurl/releases/download/{{ package_version }}/grpcurl_{{ package_version[1:] }}_linux_x86_64.tar.gz"
    package_parse_delimeter: " "
    package_parse_index: 1
    package_extract: true
    package_extract_exclude: ["LICENSE", "README.md"]
    package_version_rcs: [0, 1]
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install jq"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "jq"
    package_version: "{{ jq_version }}"
    package_version_command: "--version"
    package_url: "https://github.com/stedolan/jq/releases/download/jq-{{ package_version }}/jq-linux64"
    package_parse_delimeter: "-"
    package_parse_index: 1
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install kind"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "kind"
    package_version: "{{ kind_version }}"
    package_url: "https://github.com/kubernetes-sigs/kind/releases/download/{{ package_version }}/kind-linux-amd64"
    package_parse_delimeter: " "
    package_parse_index: 1
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install oc"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "oc"
    package_version: "{{ oc_version }}"
    package_url: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ package_version }}/openshift-client-linux-{{ package_version }}.tar.gz"
    package_parse_delimeter: " "
    package_parse_index: 2
    package_extract: true
    package_extract_exclude: ["kubectl", "README.md"]
    package_version_rcs: [0, 1]
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install kubectl"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "kubectl"
    package_version: "{{ kubectl_version }}"
    package_url: "https://storage.googleapis.com/kubernetes-release/release/{{ package_version }}/bin/linux/amd64/kubectl"
    package_parse_delimeter: '"'
    package_parse_index: 5
    package_version_rcs: [0, 1]
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install ngrok"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "ngrok"
    package_version: "{{ ngrok_version }}"
    package_url: "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v{{ package_version.split('.')[0] }}-stable-linux-amd64.tgz"
    package_parse_delimeter: " "
    package_parse_index: 2
    package_extract: true
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install operator-sdk"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "operator-sdk"
    package_version: "{{ operator_sdk_version }}"
    package_url: "https://github.com/operator-framework/operator-sdk/releases/download/{{ package_version }}/operator-sdk_linux_amd64"
    package_parse_delimeter: '"'
    package_parse_index: 1
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install opm"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "opm"
    package_version: "{{ opm_version }}"
    package_url: "https://github.com/operator-framework/operator-registry/releases/download/{{ package_version }}/linux-amd64-opm"
    package_parse_delimeter: '"'
    package_parse_index: 1
  tags:
    - clean
    - prerequisites
    - install
    - verify

- name: "Install tkn"
  ansible.builtin.include_role:
    name: install-binary
  vars:
    package_binary: "tkn"
    package_version: "{{ tkn_version }}"
    package_url: "https://github.com/tektoncd/cli/releases/download/v{{ package_version }}/tkn_{{ package_version }}_Linux_x86_64.tar.gz"
    package_parse_delimeter: " "
    package_parse_index: 2
    package_extract: true
    package_extract_exclude: ["LICENSE", "README.md"]
    package_version_rcs: [0, 1]
  tags:
    - clean
    - prerequisites
    - install
    - verify
