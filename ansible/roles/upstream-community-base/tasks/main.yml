---
- name: "Ensure that the '{{ op_work_dir }}' directory exists"
  ansible.builtin.file:
    state: "{{ item }}"
    path: "{{ op_work_dir }}"
    mode: "755"
  with_items:
    - directory

- name: "Ensure that the '{{ op_bin_dir }}' directory exists"
  ansible.builtin.file:
    state: "{{ item }}"
    path: "{{ op_bin_dir }}"
    mode: "755"
  with_items:
    - directory

- name: "Load config '{{ oc_config_file }}'"
  ansible.builtin.include_role:
    name: include-vars
  vars:
    var_name: uc_config
    var_file: "{{ oc_config_file }}"
    var_remote_src: false
    var_verbose: true

- name: "Setting variables from config 'uc_config'"
  ansible.builtin.set_fact:
    kind_version: "{{ uc_config.kind.version | default(kind_version) }}"
    kind_kube_version: "{{ uc_config.kind.kube_version | default(kind_kube_version) }}"
    registry_enable: "{{ uc_config.registry.enable | default(registry_enable) }}"
    registry_name: "{{ uc_config.registry.name | default(registry_name) }}"
    registry_port: "{{ uc_config.registry.port | default(registry_port) }}"
    registry_ssl: "{{ uc_config.registry.ssl | default(registry_ssl) }}"
    registry_hostname: "{{ ansible_facts['fqdn'] | default('') }}"
    registry_ip: "{{ ansible_facts['all_ipv4_addresses'][0] | default('') }}"
    iib_version: "{{ uc_config.iib.version | default(iib_version) }}"
    skip_iib: "{{ (not uc_config.iib.enable | bool) | default(skip_iib) }}"
    kubectl_version: "{{ uc_config.tools.kubectl.version | default(kubectl_version) }}"
    grpcurl_version: "{{ uc_config.tools.grpcurl.version | default(grpcurl_version) }}"
    ngrok_version: "{{ uc_config.tools.ngrok.version | default(ngrok_version) }}"
    jq_version: "{{ uc_config.tools.jq.version | default(jq_version) }}"
    oc_version: "{{ uc_config.tools.oc.version | default(oc_version) }}"
    operator_sdk_version: "{{ uc_config.tools.operator_sdk.version | default(operator_sdk_version) }}"
    opm_version: "{{ uc_config.tools.opm.version | default(opm_version) }}"
    olm_version: "{{ uc_config.tools.olm.version | default(olm_version) }}"
    tekton_pipeline_version: "{{ uc_config.tekton.pipeline.version | default(tekton_pipeline_version) }}"
    tekton_triggers_version: "{{ uc_config.tekton.triggers.version | default(tekton_triggers_version) }}"
    tekton_dashboard_version: "{{ uc_config.tekton.dashboard.version | default(tekton_dashboard_version) }}"
    tkn_version: "{{ uc_config.tekton.tkn.version | default(tkn_version) }}"
  when: uc_config is defined
