---
- name: "Upstream community main playbook"
  hosts: all
  become: false
  gather_facts: true
  vars:
    op_work_dir: "{{ ansible_env.HOME }}/.op"
    op_bin_dir: "{{ op_work_dir }}/bin"
    registry_cert_dir: "{{ op_work_dir }}/certs"
    oc_namespace: default
    run_upstream: true
    run_cleanup: false

  environment:
    # User has to do 'export SSL_CERT_DIR=$HOME/.op/certs' when running in rootless mode
    SSL_CERT_DIR: "{{ registry_cert_dir }}"
    PATH: "{{ op_bin_dir }}:{{ ansible_env.PATH }}"

  tasks:
    - name: "Upstream community base"
      ansible.builtin.import_role:
        name: upstream-community-base
      tags:
        - always

    - name: "Install upstream community prerequisites"
      ansible.builtin.include_role:
        name: install-upstream-community-prerequisites
      when: prerequisites is undefined or prerequisites | bool
      tags:
        - clean
        - prerequisites
        - install
        - verify

    - name: "Install kind cluster"
      ansible.builtin.include_role:
        name: install-kind-cluster
      when: kubeconfig is undefined or kubeconfig | length == 0
      tags:
        - clean
        - install
        - verify
        - kind-install

    - name: "Check cluster"
      ansible.builtin.include_role:
        name: install-kind-cluster
        tasks_from: verify_cluster.yml
      when: kubeconfig is defined or kubeconfig | length > 0
      tags:
        - clean
        - install
        - verify
        - kind-install

    - name: "Install iib"
      ansible.builtin.include_role:
        name: install_iib
      when: skip_iib is undefined or not skip_iib | bool
      tags:
        - clean
        - install
        - iib-install
        - iib-delete


    - name: "Install OLM"
      ansible.builtin.include_role:
        name: install-olm
      when: skip_olm is undefined or not skip_olm | bool
      tags:
        - clean
        - install
        - verify

    - name: "Install Tekton"
      ansible.builtin.include_role:
        name: install-tekton
      tags:
        - clean
        - install
        - verify

    - name: "Install operator pipeline"
      ansible.builtin.include_role:
        name: operator-pipeline
      # when: operator-pipeline is defined and operator-pipeline|bool
      tags:
        - tekton-task
        - tekton-pipeline
        - ci
        - tekton-task-upstream
        - tekton-pipeline-upstream

    - name: "Delete kind cluster"
      ansible.builtin.include_role:
        name: install-kind-cluster
      tags:
        - never
        - kind-delete

    - name: "Report community status"
      ansible.builtin.debug:
        var: community_final_report
      when:
        - community_final_report is defined
        - community_final_report | length > 0
      tags:
        - always
