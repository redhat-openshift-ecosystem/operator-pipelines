---
name: Deployment

on:  # yamllint disable-line rule:truthy
  workflow_run:
    workflows:
      - E2E-CI
    branches:
      - main
    types:
      - completed
  workflow_dispatch:

jobs:

  deploy-dev:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment:
      name: dev
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          pip install --user openshift
      - name: Deploy dev environment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/deploy.yml
          directory: ./ansible
          requirements: playbooks/requirements.yml
          vault_password: ${{secrets.VAULT_PASSWORD}}
          options: |
            --inventory inventory/operator-pipeline
            --extra-vars "env=dev operator_pipeline_image_tag=${{ github.sha }}"
            --skip-tags ci
            --verbose

  deploy-qa:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment:
      name: qa
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          pip install --user openshift
      - name: Deploy qa environment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/deploy.yml
          directory: ./ansible
          requirements: playbooks/requirements.yml
          vault_password: ${{secrets.VAULT_PASSWORD}}
          options: |
            --inventory inventory/operator-pipeline
            --extra-vars "env=qa operator_pipeline_image_tag=${{ github.sha }}"
            --skip-tags ci
            --verbose

  deploy-stage:
    runs-on: ubuntu-latest
    environment:
      name: stage
    needs:
      - deploy-qa
      - deploy-dev
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          pip install --user openshift
      - name: Deploy stage environment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/deploy.yml
          directory: ./ansible
          requirements: playbooks/requirements.yml
          vault_password: ${{secrets.VAULT_PASSWORD}}
          options: |
            --inventory inventory/operator-pipeline
            --extra-vars "env=stage operator_pipeline_image_tag=${{ github.sha }}"
            --skip-tags ci
            --verbose

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: prod
    needs:
      - deploy-stage
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: |
          pip install --user openshift
      - name: Deploy prod environment
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbooks/deploy.yml
          directory: ./ansible
          requirements: playbooks/requirements.yml
          vault_password: ${{secrets.VAULT_PASSWORD}}
          options: |
            --inventory inventory/operator-pipeline
            --extra-vars "env=prod operator_pipeline_image_tag=${{ github.sha }}"
            --skip-tags ci
            --verbose

  release:
    name: Github release
    runs-on: ubuntu-latest
    needs:
      - deploy-prod
    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Log in to Quay.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: quay.io

      - name: Tag image with a release tag
        run: |

          podman pull quay.io/redhat-isv/operator-pipelines-images:${{ github.sha }}

          podman tag quay.io/redhat-isv/operator-pipelines-images:${{ github.sha }} quay.io/redhat-isv/operator-pipelines-images:released
          podman tag quay.io/redhat-isv/operator-pipelines-images:${{ github.sha }} quay.io/redhat-isv/operator-pipelines-images:${{ steps.tag_version.outputs.new_tag }}

          podman push quay.io/redhat-isv/operator-pipelines-images:released
          podman push quay.io/redhat-isv/operator-pipelines-images:${{ steps.tag_version.outputs.new_tag }}
